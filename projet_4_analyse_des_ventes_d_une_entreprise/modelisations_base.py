import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport seaborn as snsdef calcul_table_chi2(X, y, data):    c=data[[X,y]].pivot_table(index=X, columns=y, aggfunc=len)    # Tableau de contingence réel    cont=c.copy()    tx=data[X].value_counts()    ty=data[y].value_counts()    cont.loc[:,"Total"]=tx    cont.loc["total",:]=ty    cont.loc["total","Total"]=len(data)    # Tableau de contingence théorique    tx = pd.DataFrame(tx)    ty = pd.DataFrame(ty)    tx.columns= ['foo']    ty.columns= ['foo']    n = len(data)    indep = tx.dot(ty.T)/n    indep.sort_index(axis=1, inplace=True)    indep.sort_index(inplace=True)    return c, cont, indep    def display_chi2(cont, indep):    mesure = (cont-indep)**2/indep    xi_n = mesure.sum().sum()    plt.figure(figsize=(8,8))    sns.heatmap(mesure/xi_n, annot=indep - cont)def conclusion_chi2(pvalue, rsquared, facteur="le facteur", cible="la cible", seuil=0.05):    # P-value : choix d'un seuil de probabilité standard, de 5%    # Coeff de corrélation : A partir du tableau d'interprétation de Cohen,    # se dégagent trois seuils selon l'importance de la corrélation    correl_petit = 0.1    correl_moyen = 0.3    correl_grand = 0.5    #Conclusion    if pvalue < seuil:        if rsquared > correl_grand:            print("On rejette HO : il y a une corrélation \                  forte entre {} et {}.".format(facteur, cible))        elif rsquared > correl_moyen:            print("On rejette HO : il y a une corrélation \                  moyenne entre {} et {}.".format(facteur, cible))        elif rsquared > correl_petit:            print("On rejette HO : il y a une petite corrélation \                  entre {} et {}.".format(facteur, cible))        elif pvalue > seuil :             print("On ne peut pas rejeter HO: il n'y a pas de corrélation \                  entre {} et {}.".format(facteur, cible))